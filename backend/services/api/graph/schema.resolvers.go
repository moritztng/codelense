package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"
	"time"

	"github.com/moritztng/codelense/backend/services/api/graph/model"
)

// TimePoints is the resolver for the timePoints field.
func (r *queryResolver) TimePoints(ctx context.Context, fromDate int, toDate int) ([]*model.TimePoint, error) {
	fromDateTime := time.Unix(int64(fromDate), 0)
	timePoints := []*model.TimePoint{}
	currentTime := fromDateTime
	for i := 0; i < 7; i++ {
		currentTime = currentTime.Add(24 * time.Hour)
		fmt.Println(fromDateTime)
		timePoints = append(timePoints, &model.TimePoint{Time: currentTime, Values: []*model.Value{{Name: "Prism", Value: i}}})
	}
	return timePoints, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
