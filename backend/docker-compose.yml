version: '3.1'

x-schedule: &schedule
  extends:
    file: ./services/schedule/docker-compose.yaml
    service: schedule
  depends_on:
    broker:
      condition: service_healthy
    loki:
      condition: service_started

services:

  api:
    extends:
      file: ./services/api/docker-compose.yaml
      service: api
    depends_on:
      loki:
        condition: service_started

  github_store:
    extends:
      file: ./services/github_store/docker-compose.yaml
      service: github_store
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_load_events:
    extends:
      file: ./services/github_load_events/docker-compose.yaml
      service: github_load_events
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_load_organization:
    extends:
      file: ./services/github_load_organization/docker-compose.yaml
      service: github_load_organization
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_load_organizations:
    extends:
      file: ./services/github_load_organizations/docker-compose.yaml
      service: github_load_organizations
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_query:
    extends:
      file: ./services/github_query/docker-compose.yaml
      service: github_query
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  schedule_load_organizations:
    <<: *schedule
    environment:
      NAME: load_organizations
      CRON: "*/1 * * * *"

  database:
    extends:
      file: ./services/database/docker-compose.yaml
      service: database
    depends_on:
      loki:
        condition: service_started
  
  pgadmin:
    extends:
      file: ./services/pgadmin/docker-compose.yaml
      service: pgadmin

  zookeeper:
    extends:
      file: ./services/kafka/docker-compose.yaml
      service: zookeeper
    depends_on:
      loki:
        condition: service_started

  broker:
    extends:
      file: ./services/kafka/docker-compose.yaml
      service: broker
    depends_on:
      zookeeper:
        condition: service_started
      loki:
        condition: service_started

  grafana_database:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: grafana_database
    depends_on:
      loki:
        condition: service_started

  grafana:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: grafana
    depends_on:
      grafana_database:
        condition: service_healthy
      loki:
        condition: service_started

  loki:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: loki
