version: '3.1'

services:

  api:
    extends:
      file: ./services/api/docker-compose.yaml
      service: api
    depends_on:
      loki:
        condition: service_started

  github_store:
    extends:
      file: ./services/github_store/docker-compose.yaml
      service: github_store
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_load_events:
    extends:
      file: ./services/github_load_events/docker-compose.yaml
      service: github_load_events
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_load_organizations:
    extends:
      file: ./services/github_load_organizations/docker-compose.yaml
      service: github_load_organizations
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  github_query:
    extends:
      file: ./services/github_query/docker-compose.yaml
      service: github_query
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  schedule_load_organizations:
    extends:
      file: ./services/schedule/docker-compose.yaml
      service: schedule
    environment:
      NAME: load_organizations
      CRON: "*/1 * * * *"
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  schedule_github_query_org_stars:
    extends:
      file: ./services/schedule/docker-compose.yaml
      service: schedule
    environment:
      NAME: github_query
      CRON: "*/1 * * * *"
      MESSAGE: "{\"queryName\": \"german_orgs_star_events\", \"query\": \"SELECT events.github_created_at, events.org_id, german_orgs.organization_name FROM events INNER JOIN german_orgs ON events.org_id=german_orgs.organization_github_id WHERE events.type='WatchEvent'\"}"
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started
  
  schedule_github_query_orgs:
    extends:
      file: ./services/schedule/docker-compose.yaml
      service: schedule
    environment:
      NAME: github_query
      CRON: "*/1 * * * *"
      MESSAGE: "{\"queryName\": \"german_orgs\", \"query\": \"SELECT DISTINCT organization_github_id, organization_name FROM organization_events\"}"
    depends_on:
      broker:
        condition: service_healthy
      loki:
        condition: service_started

  database:
    extends:
      file: ./services/database/docker-compose.yaml
      service: database
    depends_on:
      loki:
        condition: service_started
  
  pgadmin:
    extends:
      file: ./services/pgadmin/docker-compose.yaml
      service: pgadmin

  zookeeper:
    extends:
      file: ./services/kafka/docker-compose.yaml
      service: zookeeper
    depends_on:
      loki:
        condition: service_started

  broker:
    extends:
      file: ./services/kafka/docker-compose.yaml
      service: broker
    depends_on:
      zookeeper:
        condition: service_started
      loki:
        condition: service_started

  grafana_database:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: grafana_database
    depends_on:
      loki:
        condition: service_started

  grafana:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: grafana
    depends_on:
      grafana_database:
        condition: service_healthy
      loki:
        condition: service_started

  loki:
    extends:
      file: ./services/grafana/docker-compose.yaml
      service: loki
